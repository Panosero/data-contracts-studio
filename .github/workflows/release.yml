name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Get version from tag
      id: get_version
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        
    - name: Verify version consistency
      run: |
        chmod +x scripts/check-version.sh
        ./scripts/check-version.sh
        
    - name: Install dependencies
      run: |
        # Backend dependencies
        cd backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        cd ..
        
        # Frontend dependencies
        cd frontend
        npm ci
        cd ..
        
    - name: Run tests
      run: |
        # Backend tests
        cd backend
        python -m pytest tests/ -v
        cd ..
        
        # Frontend tests
        cd frontend
        npm test -- --coverage --watchAll=false
        cd ..
        
    - name: Build applications
      run: |
        # Build frontend
        cd frontend
        npm run build
        cd ..
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_version.outputs.tag }}
        release_name: Release ${{ steps.get_version.outputs.tag }}
        body: |
          ## What's Changed
          
          Please see [CHANGELOG.md](CHANGELOG.md) for detailed changes.
          
          ## Installation
          
          ### Docker (Recommended)
          ```bash
          git clone <repository-url>
          cd data-contracts-studio
          git checkout ${{ steps.get_version.outputs.tag }}
          make deploy
          ```
          
          ### Manual Installation
          ```bash
          git clone <repository-url>
          cd data-contracts-studio
          git checkout ${{ steps.get_version.outputs.tag }}
          make install
          make dev
          ```
          
          ## Verification
          
          - **Frontend**: http://localhost:3333
          - **Backend API**: http://localhost:8888
          - **API Documentation**: http://localhost:8888/docs
          
          ## Version Information
          - Version: ${{ steps.get_version.outputs.version }}
          - Build Date: ${{ github.event.repository.pushed_at }}
          - Commit: ${{ github.sha }}
        draft: false
        prerelease: false
        
    - name: Upload Frontend Build
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./frontend/build
        asset_name: frontend-build-${{ steps.get_version.outputs.version }}.zip
        asset_content_type: application/zip
        
  docker:
    runs-on: ubuntu-latest
    needs: release
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Get version from tag
      id: get_version
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
    - name: Build Docker images
      run: |
        docker build -t data-contracts-studio-frontend:${{ steps.get_version.outputs.version }} frontend/
        docker build -t data-contracts-studio-backend:${{ steps.get_version.outputs.version }} backend/
        
    # Uncomment and configure if you want to push to a container registry
    # - name: Login to Container Registry
    #   uses: docker/login-action@v3
    #   with:
    #     registry: ghcr.io
    #     username: ${{ github.actor }}
    #     password: ${{ secrets.GITHUB_TOKEN }}
    #     
    # - name: Push Docker images
    #   run: |
    #     docker tag data-contracts-studio-frontend:${{ steps.get_version.outputs.version }} ghcr.io/${{ github.repository }}/frontend:${{ steps.get_version.outputs.version }}
    #     docker tag data-contracts-studio-backend:${{ steps.get_version.outputs.version }} ghcr.io/${{ github.repository }}/backend:${{ steps.get_version.outputs.version }}
    #     docker push ghcr.io/${{ github.repository }}/frontend:${{ steps.get_version.outputs.version }}
    #     docker push ghcr.io/${{ github.repository }}/backend:${{ steps.get_version.outputs.version }}
